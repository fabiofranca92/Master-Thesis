/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package tnmcr;

import java.awt.Component;
import java.awt.Container;
import java.awt.Font;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Set;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;
import javax.swing.ListModel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.semanticweb.owlapi.apibinding.OWLManager;
import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLClass;
import org.semanticweb.owlapi.model.OWLDataFactory;
import org.semanticweb.owlapi.model.OWLObjectProperty;
import org.semanticweb.owlapi.model.OWLOntology;
import org.semanticweb.owlapi.model.OWLOntologyCreationException;
import org.semanticweb.owlapi.model.OWLOntologyManager;
import org.semanticweb.owlapi.model.OWLOntologyStorageException;
import org.semanticweb.owlapi.reasoner.OWLReasoner;

/**
 *
 * @author fabiofranca
 */
public class ColonAndRectum_GUI extends javax.swing.JFrame {
   
    boolean deposits = false;
    OWLOntologyManager manager;
    static String iri;
    Preferences pref;
    static OWLDataFactory factory;
    static String iribtl2;
    static OWLReasoner reasoner;
    static ColonAndRectum cr;
    static Ontology_Handler oh;
    String quality;
    String valueRegion;
    Object place;
    boolean rlnAss;
    int nrMetas = 0;
    String[] Metas;
    DefaultListModel<Object> listModel = new DefaultListModel<>();
    boolean checkVersion;
    int version;
    
    //VARIABLES
    
     int pAssessment = 0;
     int pEvidence = 0;
     int pConfinement = 0;
     
    
    /**
     * Creates new form ColonAndRectum_GUI
     *

     * @param oh
     * @param colon
     */
    public ColonAndRectum_GUI( Ontology_Handler oh, ColonAndRectum colon) {
        
        this.oh = oh; 
        this.cr = (ColonAndRectum) colon;
        this.pref = oh.pref;
        this.version = pref.getVersion();
        this.iribtl2 = pref.getBtl2IRI();
        initComponents();
    
        enableComponents(jPanel2, false);
        place = null;
       enableComponents(jPanel4, false);
       enableComponents(jPanel5, false);
        explain.setFont(new Font("Serif", Font.ITALIC, 16));
        explain.setLineWrap(true);
        explain.setWrapStyleWord(true);
        explain.setOpaque(false);
        explain.setEditable(false);
        explain.setVisible(true);
        jScrollPane1.setVisible(true);
        rlnAss = false;
        listOrgans.setModel(listModel);
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jProgressBar1 = new javax.swing.JProgressBar();
        jLabel5 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        regionalLN = new javax.swing.JComboBox();
        primaryTumor = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        metastasis = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        confinement = new javax.swing.JComboBox();
        extension = new javax.swing.JComboBox();
        evidence = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        nrLymph = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jPanel5 = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        organ = new javax.swing.JTextField();
        peritoneum = new javax.swing.JCheckBox();
        insert = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        listOrgans = new javax.swing.JList();
        classify = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        explain = new javax.swing.JTextArea();
        jButton1 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();

        jLabel5.setText("jLabel5");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Assessment :");

        jLabel2.setText("Primary Tumor");

        jLabel3.setText("Regional Lymph Nodes");

        regionalLN.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        regionalLN.setSelectedIndex(1);
        regionalLN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                regionalLNActionPerformed(evt);
            }
        });

        primaryTumor.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        primaryTumor.setSelectedIndex(1);
        primaryTumor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                primaryTumorActionPerformed(evt);
            }
        });

        jLabel9.setText("Distant Metastasis");

        metastasis.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        metastasis.setSelectedIndex(1);
        metastasis.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                metastasisActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(primaryTumor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(37, 37, 37)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(regionalLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel9))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(metastasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(metastasis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(regionalLN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(primaryTumor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel4.setText("Evidence Of Primary Tumor");

        jLabel6.setText("Extension of Invasion");

        jLabel7.setText("Confinement");

        confinement.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Confined", "Invasive" }));
        confinement.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confinementActionPerformed(evt);
            }
        });

        extension.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Lamina Propria", "Submucosa", "Muscular Layer", "Subserosa", "Adventitia", "Visceral Peritoneum", "Other" }));
        extension.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                extensionActionPerformed(evt);
            }
        });

        evidence.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Yes", "No" }));
        evidence.setSelectedIndex(1);
        evidence.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                evidenceActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(137, 137, 137)
                .addComponent(confinement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(42, 42, 42)
                .addComponent(extension, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(23, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(evidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(28, 28, 28)
                        .addComponent(jLabel6)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(evidence, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(confinement, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extension, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(206, 206, 206))
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel8.setText("Number Of Positive Metastatic Regional Lymph Nodes");

        nrLymph.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nrLymphActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Tumor deposits");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(nrLymph, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nrLymph, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox1)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        jPanel5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel10.setText("Distant Metastasis in :");

        organ.setText("Insert Organ Here");

        peritoneum.setText("Peritoneum ");
        peritoneum.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                peritoneumActionPerformed(evt);
            }
        });

        insert.setText("Insert");
        insert.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                insertMouseClicked(evt);
            }
        });
        insert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertActionPerformed(evt);
            }
        });

        delete.setText("Delete");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(listOrgans);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(peritoneum)
                    .addComponent(organ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(insert, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(delete, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(152, 152, 152))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(peritoneum)
                        .addGap(12, 12, 12)
                        .addComponent(organ, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(insert)
                            .addComponent(delete))))
                .addGap(0, 6, Short.MAX_VALUE))
        );

        classify.setText("Classify");
        classify.setToolTipText("");
        classify.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                classifyMouseClicked(evt);
            }
        });
        classify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                classifyActionPerformed(evt);
            }
        });

        explain.setBackground(new java.awt.Color(238, 238, 238));
        explain.setColumns(20);
        explain.setRows(5);
        jScrollPane1.setViewportView(explain);

        jButton1.setText("Change Version");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jMenu1.setText("File");

        jMenuItem1.setText("Analyse Csv");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 20, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(20, 20, 20))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 536, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(classify)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 410, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(classify)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(9, 9, 9)))
                .addComponent(jButton1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void primaryTumorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_primaryTumorActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        if (newItem.equals("No")) {
           enableComponents(jPanel2, false);
           pAssessment = 0;
           pEvidence = 0;
        } else {
            enableComponents(evidence, true);
          
            evidence.setEnabled(true);
            pAssessment = 1;
            pEvidence = 0;
            place = null;
        }
    }//GEN-LAST:event_primaryTumorActionPerformed

    private void confinementActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confinementActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        if (newItem.equals("Confined")) {
            place = "EpithiliumOfLargeIntestine";
            extension.setEnabled(false);
            jLabel6.setEnabled(false);
            pConfinement = 0;
        } else {

            extension.setEnabled(true);
            jLabel6.setEnabled(true);
            pConfinement = 1;
            place = extension.getSelectedItem().toString().toLowerCase();
        }


    }//GEN-LAST:event_confinementActionPerformed

    private void evidenceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_evidenceActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        if (newItem.equals("Yes")) {
            jLabel7.setEnabled(true);
            confinement.setEnabled(true);
            explain.setEnabled(true);
            enableComponents(jPanel2, true);
            extension.setEnabled(false);
            pEvidence = 1;
            pAssessment = 1;
           place = "EpithiliumOfLargeIntestine";
            System.out.println("EVi  "+pEvidence+"    Asses: "+pAssessment);
        } else {
            jLabel7.setEnabled(false);
            confinement.setEnabled(false);
            jLabel6.setEnabled(false);
            extension.setEnabled(false);
            pEvidence = 0;
            pAssessment = 1;
            
        }
    }//GEN-LAST:event_evidenceActionPerformed

    private void extensionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_extensionActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        place = cr.verifyPlace(newItem);

    }//GEN-LAST:event_extensionActionPerformed

    private void nrLymphActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nrLymphActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nrLymphActionPerformed

    private void regionalLNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_regionalLNActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        if (newItem.equals("No")) {
          
            enableComponents(jPanel4, false);
            rlnAss = false;

        } else {
            enableComponents(jPanel4, true);
           
            rlnAss = true;
        }
    }//GEN-LAST:event_regionalLNActionPerformed

    private void metastasisActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_metastasisActionPerformed
        JComboBox cb = (JComboBox) evt.getSource();
        Object newItem = cb.getSelectedItem();

        if (newItem.equals("No")) {
            enableComponents(jPanel5, false);
            
            nrMetas = 0;
            peritoneum.setSelected(false);
            DefaultListModel listModel = (DefaultListModel) listOrgans.getModel();
            listModel.removeAllElements();
        } else {
            enableComponents(jPanel5, true);
      

        }    }//GEN-LAST:event_metastasisActionPerformed

    private void insertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertActionPerformed

    }//GEN-LAST:event_insertActionPerformed

    private void insertMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_insertMouseClicked
        DefaultListModel listModel = (DefaultListModel) listOrgans.getModel();
        if (organ.getText().equals("Insert Organ Here")) {

        } else if (listModel.contains(organ.getText())) {

        } else if (organ.getText().equals("Large Intestine")) {
            JOptionPane.showMessageDialog(new JFrame("Error"), "Large Intestine is not a valid organ for Distant Metastasis");
        } else {

            listModel.addElement(organ.getText());

        }


    }//GEN-LAST:event_insertMouseClicked

    private void peritoneumActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_peritoneumActionPerformed
        JCheckBox cb = (JCheckBox) evt.getSource();
        DefaultListModel listModel = (DefaultListModel) listOrgans.getModel();
        boolean newItem = cb.isSelected();

        if (newItem) {
            listModel.addElement("Peritoneum");
        }
        if (!newItem) {
            listModel.removeElement("Peritoneum");

        }

    }//GEN-LAST:event_peritoneumActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        Analise_CSV_GUI analise = new Analise_CSV_GUI();
        Object[] options = {"Template",
                    "Personalized",};
        JFrame frame = new JFrame();
    int n = JOptionPane.showOptionDialog(frame,
    "CSV file template or personalized ?",
    "Analise CSV",
    JOptionPane.YES_NO_OPTION,
    JOptionPane.QUESTION_MESSAGE,
    null,
    options,
    options[0]);
      System.out.println(n);  
        
      //TEMPLATE = 0
      
      
      if(n == 0){
          
          final JFileChooser fileChooser = new JFileChooser();
          fileChooser.setCurrentDirectory(new File(System.getProperty("user.home")));
          int result = fileChooser.showOpenDialog(this);
          if (result == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            System.out.println("Selected file: " + selectedFile.getAbsolutePath());
              Analise_CSV_Template  csv =  new Analise_CSV_Template(cr, oh, selectedFile.getAbsolutePath(),version);
              try {
                  csv.main();
              } catch (OWLOntologyStorageException ex) {
                  Logger.getLogger(ColonAndRectum_GUI.class.getName()).log(Level.SEVERE, null, ex);
              } catch (IOException ex) {
                  Logger.getLogger(ColonAndRectum_GUI.class.getName()).log(Level.SEVERE, null, ex);
              }
              
            }
        
      }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        listModel.removeElement(organ.getText());
    }//GEN-LAST:event_deleteActionPerformed

    private void classifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_classifyActionPerformed

    }//GEN-LAST:event_classifyActionPerformed

    private void classifyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_classifyMouseClicked
        explain.setText("");
      
        if (nrLymph.getText().equals("")) {
            nrLymph.setText("0");
        }
        if (!isNumeric(nrLymph.getText())) {
            JOptionPane.showMessageDialog(new JFrame("Error"), "Insert a valid number of Positive Metastatic Regional Lymph Nodes");
        } else {

            nrMetas = listOrgans.getModel().getSize();
            oh.eraseIndividuals();

            try {
                cr.createIndividualPrimaryTumor("PrimaryTumor", place, pAssessment,pEvidence, pConfinement);
                cr.createIndividualRegionalLymphNodes("RegionalLymphNodes", Integer.parseInt(nrLymph.getText()), rlnAss,version,deposits);
                cr.createIndividualMetastasis("Metastasis", nrMetas, peritoneum.isSelected(),version);
            } catch (OWLOntologyStorageException ex) {

                Logger.getLogger(ColonAndRectum_GUI.class.getName()).log(Level.SEVERE, null, ex);
            }

            oh.startReasoner();
             oh.startReasoner();
            ArrayList<OWLClass> Tclassif = oh.classify("PrimaryTumor","Colon");
            ArrayList<OWLClass> Nclassif = oh.classify("RegionalLymphNodes","Colon");
            ArrayList<OWLClass> Mclassif = oh.classify("Metastasis","Colon");
             System.out.println(Tclassif.size());
            for (OWLClass i : Tclassif) {
                
                if (cr.replaceIri(i).replace("ColonRectumTNM_", "").contains("p")) {
                    explain.append(cr.replaceIri(i).replace("ColonRectumTNM_", "") + " ");
                   
                }
            }
            for (OWLClass i : Nclassif) {
                if (cr.replaceIri(i).replace("ColonRectumTNM_", "").contains("p")) {
                    explain.append(cr.replaceIri(i).replace("ColonRectumTNM_", "") + " ");
                }
            }
            for (OWLClass i : Mclassif) {
                explain.append(cr.replaceIri(i).replace("ColonRectumTNM_", "") + " ");
            }

        }
    }//GEN-LAST:event_classifyMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        try {
            new TNM_Classifier().setVisible(true);
        } catch (OWLOntologyCreationException ex) {
            Logger.getLogger(ColonAndRectum_GUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
         JCheckBox cb = (JCheckBox) evt.getSource();
        DefaultListModel listModel = (DefaultListModel) listOrgans.getModel();
        boolean newItem = cb.isSelected();

        if (newItem) {
           deposits = true;
        }
        if (!newItem) {
            deposits = false;

        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    public static boolean isNumeric(String str) {
        try {
            double d = Double.parseDouble(str);
        } catch (NumberFormatException nfe) {
            return false;
        }
        return true;
    }

      public void enableComponents(Container container, boolean enable) {
        Component[] components = container.getComponents();
        for (Component component : components) {
            component.setEnabled(enable);
            if (component instanceof Container) {
                enableComponents((Container) component, enable);
            }
        }
    }

    /**
     * @param args the command line arguments
     */
  


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton classify;
    private javax.swing.JComboBox confinement;
    private javax.swing.JButton delete;
    private javax.swing.JComboBox evidence;
    private javax.swing.JTextArea explain;
    private javax.swing.JComboBox extension;
    private javax.swing.JButton insert;
    private javax.swing.JButton jButton1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JProgressBar jProgressBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList listOrgans;
    private javax.swing.JComboBox metastasis;
    private javax.swing.JTextField nrLymph;
    private javax.swing.JTextField organ;
    private javax.swing.JCheckBox peritoneum;
    private javax.swing.JComboBox primaryTumor;
    private javax.swing.JComboBox regionalLN;
    // End of variables declaration//GEN-END:variables
}
